name: C++ Solving Update

on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]

jobs:
  test-leetcode:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup environment
      run: |
        sudo apt-get update
        sudo apt-get install -y g++

    - name: Process LeetCode solutions
      id: process
      run: |
        # Initialize README
        echo "# LeetCode Solutions Status" > README.md
        echo "" >> README.md
        echo "| Difficulty | Problem | Solution | Status | Runtime | Cases Passed |" >> README.md
        echo "|------------|---------|----------|--------|---------|--------------|" >> README.md

        process_file() {
          local file="$1"
          local difficulty=$(dirname "$file")
          local filename=$(basename "$file")
          local problem="${filename%.*}"
          local output="${filename%.*}.out"
          local test_cases=0
          local passed_cases=0
          local status="❌ Error"
          local runtime="N/A"

          echo "🔍 Testing $difficulty/$filename..."

          # Compile with common LeetCode flags
          if g++ -std=c++17 -O2 -Wall "$file" -o "$output"; then
            # Basic test (modify this according to your needs)
            start_time=$(date +%s.%N)
            if "./$output" > output.log 2>&1; then
              end_time=$(date +%s.%N)
              runtime=$(echo "$end_time - $start_time" | bc | awk '{printf "%.3f s", $1}')
              status="✅ Accepted"
              
              # Simple case counting (adjust as needed)
              test_cases=$(grep -c "Case" output.log || echo 0)
              passed_cases=$(grep -c "Passed" output.log || echo 0)
            fi
          fi

          # Cleanup
          rm -f "$output" output.log

          # Add to README with proper relative path
          echo "| $difficulty | $problem | [${filename}]($file) | $status | $runtime | $passed_cases/$test_cases |" >> README.md
        }

        export -f process_file
        find easy medium hard -name "*.cpp" -exec bash -c 'process_file "$0"' {} \;

    - name: Commit README
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        git add README.md
        git diff --quiet && git diff --staged --quiet || git commit -m "Update README with test results"
        git push
