name: C++ Solving Update

on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up environment
      run: |
        sudo apt-get update
        sudo apt-get install -y g++

    - name: Process solutions
      id: process
      run: |
        # Create README header
        echo "# LeetCode Solutions Progress" > README.md
        echo "" >> README.md
        echo "| Difficulty | Problem | Solution | Status | Runtime | Updated At |" >> README.md
        echo "|------------|---------|----------|--------|---------|------------|" >> README.md

        process_file() {
          local file="$1"
          local difficulty=$(dirname "$file")
          local filename=$(basename "$file")
          
          # Clean problem name (remove numbering)
          local problem=$(echo "$filename" | sed -E 's/^[0-9]+\. //' | sed 's/\.cpp//')
          local encoded_file=$(echo "$file" | sed 's/ /%20/g')
          local output="solution.out"
          local status="❌ Error"
          local runtime="N/A"
          local last_updated=$(date -r "$file" "+%Y-%m-%d %H:%M")

          echo "🔄 Processing $difficulty/$filename..."

          # Compile with LeetCode-compatible flags
          if g++ -std=c++17 -O2 "$file" -o "$output" 2>/dev/null; then
            start_time=$(date +%s.%N)
            if timeout 5s ./"$output" >/dev/null 2>&1; then
              end_time=$(date +%s.%N)
              runtime_ms=$(echo "($end_time - $start_time)*1000" | bc | awk '{printf "%.0f ms", $1}')
              status="✅ Accepted"
              runtime=$runtime_ms
            fi
            rm -f "$output"
          fi

          # Add to README with proper encoding
          echo "| $difficulty | $problem | [$filename]($encoded_file) | $status | $runtime | $last_updated |" >> README.md
        }

        export -f process_file
        find easy medium hard -name "*.cpp" -exec bash -c 'process_file "$0"' {} \;

    - name: Commit updates
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        git add README.md
        git diff --quiet && git diff --staged --quiet || git commit -m "📊 Update solutions status"
        git push
